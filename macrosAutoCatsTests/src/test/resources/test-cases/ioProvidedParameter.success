#include commonSimpleClasses

val allocated = scala.collection.mutable.ListBuffer[String]()

object Test {
  val theA: IO[A] = IO { allocated.append("A"); A() }
  val theB: IO[B] = IO { allocated.append("B"); B() }
  val theC: Resource[IO, C] = autowire[C](theA, theB)
}

val theC: C = {
  import cats.effect.unsafe.implicits.global
  Test.theC.allocated.unsafeRunSync()._1
}

require(theC.a != null)
require(theC.b != null)

require(allocated(0) == "A")
require(allocated(1) == "B")