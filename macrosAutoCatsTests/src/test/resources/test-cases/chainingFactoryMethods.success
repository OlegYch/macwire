import com.softwaremill.macwire.autocats._

#include commonSimpleClasses
import cats.effect._


val created = scala.collection.mutable.Set[String]()

object Test {
  def theA(): Resource[IO, A] = { created.add("a"); Resource.pure(A()) }
  def theB(b: A): Resource[IO, B] = { created.add("b"); Resource.pure(B()) }
  val theC: Resource[IO, C] = autowire[C](theA _, theB _)
}

val theC: C = {
  import cats.effect.unsafe.implicits.global
  Test.theC.allocated.unsafeRunSync()._1
}

require(theC.a != null)
require(theC.b != null)

require(created.size == 2)
require(created.contains("a"))
require(created.contains("b"))
