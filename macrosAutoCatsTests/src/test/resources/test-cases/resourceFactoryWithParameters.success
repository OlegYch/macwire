import com.softwaremill.macwire.autocats._

#include commonSimpleClasses
import cats.effect._

val factoryParams = scala.collection.mutable.ListBuffer[B]()

object Test {
  def theA(b: B): A = { factoryParams.append(b); A() }
  val theB: Resource[IO, B] = Resource.pure(B())
  val theC: Resource[IO, C] = autowire[C](theA _, theB)
}

val theC: C = {
  import cats.effect.unsafe.implicits.global
  Test.theC.allocated.unsafeRunSync()._1
}

require(theC.a != null)
require(theC.b != null)

require(factoryParams.length == 1)
require(factoryParams.head eq theC.b)
