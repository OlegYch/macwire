import com.softwaremill.macwire.autocats._

#include commonSimpleClasses
import cats.effect._

val allocated = scala.collection.mutable.ListBuffer[String]()

object Test {
  val theA: Resource[IO, A] = Resource.make(IO { allocated.append("A"); A() })(_ => IO.unit)
  val theB: Resource[IO, B] = Resource.make(IO { allocated.append("B"); B() })(_ => IO.unit)
  val theC: Resource[IO, C] = autowire[C](theA, theB)
}

val theC: C = {
  import cats.effect.unsafe.implicits.global
  Test.theC.allocated.unsafeRunSync()._1
}

require(theC.a != null)
require(theC.b != null)

require(allocated(0) == "A")
require(allocated(1) == "B")