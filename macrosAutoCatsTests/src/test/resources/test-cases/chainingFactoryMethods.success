#include commonSimpleClasses

val created = scala.collection.mutable.ListBuffer[String]()

object Test {
  def theA(): Resource[IO, A] = Resource.eval(IO { created.append("a"); A() })
  def theB(b: A): Resource[IO, B] = Resource.eval(IO { created.append("b"); B() })
  val theC: Resource[IO, C] = autowire[C](theA _, theB _)
}

val theC: C = {
  import cats.effect.unsafe.implicits.global
  Test.theC.allocated.unsafeRunSync()._1
}

require(theC.a != null)
require(theC.b != null)

require(created.size == 2)
require(created(0) == "a")
require(created(1) == "b")
